name: staging-release

on:
  push:
    paths:
      - "**"
      - "!others/fluentbit"
      - "!others/pocketbase"
      - "!.github/workflows/fluent-bit-release.yml"
      - "!.github/workflows/pocketbase-release.yml"
    branches:
      - next

jobs:
  arm64:
    runs-on: [self-hosted, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "next"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        id: package-version
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: coollabsio/coolify:next-arm64
          cache-from: type=registry,ref=coollabsio/coolify:buildcache-next-arm64
          cache-to: type=registry,ref=coollabsio/coolify:buildcache-next-arm64,mode=max
  amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "next"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        id: package-version
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: coollabsio/coolify:next-amd64
          cache-from: type=registry,ref=coollabsio/coolify:buildcache-next-amd64
          cache-to: type=registry,ref=coollabsio/coolify:buildcache-next-amd64,mode=max
  merge-manifest:
    runs-on: ubuntu-latest
    needs: [arm64, amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create & publish manifest
        run: |
          docker manifest create coollabsio/coolify:next --amend coollabsio/coolify:next-amd64 --amend coollabsio/coolify:next-arm64
          docker manifest push coollabsio/coolify:next
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_DEV_RELEASE_CHANNEL }}
